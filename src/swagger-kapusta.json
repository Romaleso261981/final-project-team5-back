{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.1",
    "title": "Kapu$ta API 1.0",
    "description": "team5 back-end API for [kapu$ta](https://kapusta.click)",
    "contact": {
      "email": "kapusta@kapusta.click"
    }
  },
  "servers": [
    {
      "url": "https://back.kapusta.click"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Finance",
      "description": "Finances endpoints"
    }
  ],
  "paths": {
    "/auth/users/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupAndLoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "201",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "description",
                      "example": "success"
                    },
                    "code": {
                      "type": "string",
                      "description": "description",
                      "example": 201
                    },
                    "user": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "email": "userEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "description",
                      "example": "Invalid value of email or password"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "title": "409",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "description",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupAndLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "description",
                      "example": "token"
                    },
                    "user": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "email": "userEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request \"validate error\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": {
                    "message": "Wrong email or password"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (one of the \"message\")",
            "content": {
              "application/json": {
                "schema": {
                  "title": "401",
                  "type": "object",
                  "example": [
                    {
                      "message": "Email or password is wrong"
                    },
                    {
                      "message": "Your Email is not verifyied!"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/verify/{verificationToken}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Verification token",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "description": "Verification Token string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "example": {
                    "message": "Verification successful"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "404",
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/resend": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Resend email for verification token",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "example": {
                    "message": "Verification email sended"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (one of the \"message\")",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": [
                    {
                      "message": "missing required field email"
                    },
                    {
                      "message": "Verification has been already passed"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content \"Successful operation\"",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User current",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "email": "userEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Google Auth",
        "parameters": [],
        "security": [],
        "responses": {
          "308": {
            "description": "Permanent Redirect (to oauth2.googleapis.com)",
            "content": {}
          }
        }
      }
    },
    "/auth/users/google-redirect": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Google Redirect",
        "parameters": [],
        "security": [],
        "responses": {
          "308": {
            "description": "Permanent Redirect (to FRONTEND_URL)",
            "content": {}
          }
        }
      }
    },
    "/api/finances/balance": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Get user balance",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "example": {
                    "balance": 100000
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "title": "401",
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Finance"
        ],
        "summary": "Set user balance",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "balance"
                ],
                "properties": {
                  "balance": {
                    "type": "integer",
                    "example": 100000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "example": {
                    "balance": 100000
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (one of the \"message\")",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": [
                    {
                      "message": "missing fields"
                    },
                    {
                      "message": "invalid value content"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "title": "401",
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Get transactions",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of transactions",
            "required": true,
            "schema": {
              "type": "string",
              "example": [
                "expenses",
                "income"
              ]
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Month of transactions",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year of transactions",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2023
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Finance"
        ],
        "summary": "Add transaction",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": {
                    "message": "missing fields"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/expenses": {
      "post": {
        "tags": [
          "Finance"
        ],
        "summary": "Add expenses transaction",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsExpensesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": {
                    "message": "missing fields"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/income": {
      "post": {
        "tags": [
          "Finance"
        ],
        "summary": "Add income transaction",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsIncomeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": {
                    "message": "missing fields"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/{transactionId}": {
      "delete": {
        "tags": [
          "Finance"
        ],
        "summary": "Delete transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction Id string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "example": {
                    "message": "Transaction deleted"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "404",
                  "type": "object",
                  "example": {
                    "message": "Not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/summary/expenses": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Get summary expenses of month",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Month of summary",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year of summary",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2023
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryExpensesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/summary/income": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Get summary income of month",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Month of summary",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year of summary",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2023
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryIncomeResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/summary": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Get summary for the last 6 months Amounts",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of transactions",
            "required": true,
            "schema": {
              "type": "string",
              "example": [
                "expenses",
                "income"
              ]
            }
          },
          {
            "name": "countmonth",
            "in": "query",
            "description": "Month of transactions",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 6
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "year": 2023,
                        "month": 3
                      }
                    },
                    "totalAmount": {
                      "example": 30000
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/finances/reports": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Get all transactions of month",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Month of summary",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year of summary",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2023
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignupAndLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "TransactionsRequest": {
        "type": "object",
        "required": [
          "category",
          "amount",
          "type",
          "month",
          "year"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "transaction description",
            "example": "salat"
          },
          "category": {
            "type": "string",
            "description": "transaction category",
            "example": "production"
          },
          "amount": {
            "type": "integer",
            "description": "amount",
            "example": 100
          },
          "type": {
            "type": "string",
            "description": "type of transaction",
            "example": "expenses"
          },
          "month": {
            "type": "integer",
            "description": "month of transaction",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of transaction",
            "example": 2023
          }
        }
      },
      "TransactionsExpensesRequest": {
        "type": "object",
        "required": [
          "category",
          "amount",
          "month",
          "year"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "transaction description",
            "example": "salat"
          },
          "category": {
            "type": "string",
            "description": "transaction category",
            "example": "production"
          },
          "amount": {
            "type": "integer",
            "description": "amount",
            "example": 100
          },
          "month": {
            "type": "integer",
            "description": "month of transaction",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of transaction",
            "example": 2023
          }
        }
      },
      "TransactionsIncomeRequest": {
        "type": "object",
        "required": [
          "category",
          "amount",
          "month",
          "year"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "transaction description",
            "example": "my"
          },
          "category": {
            "type": "string",
            "description": "transaction category",
            "example": "salary"
          },
          "amount": {
            "type": "integer",
            "description": "amount",
            "example": 99000
          },
          "month": {
            "type": "integer",
            "description": "month of transaction",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of transaction",
            "example": 2023
          }
        }
      },
      "TransactionsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Transaction id",
            "example": "63fb87c8c97b95d5cdde1b27"
          },
          "description": {
            "type": "string",
            "description": "transaction description",
            "example": "salat"
          },
          "category": {
            "type": "string",
            "description": "transaction category",
            "example": "production"
          },
          "amount": {
            "type": "integer",
            "description": "amount",
            "example": 100
          },
          "currency": {
            "type": "string",
            "description": "currency",
            "example": "UAH"
          },
          "type": {
            "type": "string",
            "description": "type of transaction",
            "example": "expenses"
          },
          "owner": {
            "type": "string",
            "description": "User`s id",
            "example": "63f8635ce9466b36765fbf24"
          },
          "month": {
            "type": "integer",
            "description": "month of transaction",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of transaction",
            "example": 2023
          },
          "date": {
            "type": "string",
            "description": "date of transaction",
            "example": "2023-03-24T19:32:27.933Z"
          }
        }
      },
      "TransactionsIncomeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Transaction id",
            "example": "63fb87c8c97b95d5cdde1b28"
          },
          "description": {
            "type": "string",
            "description": "transaction description",
            "example": "my"
          },
          "category": {
            "type": "string",
            "description": "transaction category",
            "example": "salary"
          },
          "amount": {
            "type": "integer",
            "description": "amount",
            "example": 99000
          },
          "currency": {
            "type": "string",
            "description": "currency",
            "example": "UAH"
          },
          "type": {
            "type": "string",
            "description": "type of transaction",
            "example": "income"
          },
          "owner": {
            "type": "string",
            "description": "User`s id",
            "example": "63f8635ce9466b36765fbf24"
          },
          "month": {
            "type": "integer",
            "description": "month of transaction",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of transaction",
            "example": 2023
          },
          "date": {
            "type": "string",
            "description": "date of transaction",
            "example": "2023-03-24T19:32:27.933Z"
          }
        }
      },
      "SummaryExpensesResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "User`s id",
            "example": "63f8635ce9466b36765fbf24"
          },
          "type": {
            "type": "string",
            "description": "type of transaction",
            "example": "expenses"
          },
          "month": {
            "type": "integer",
            "description": "month of summary",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of summary",
            "example": 2023
          },
          "totalAmount": {
            "type": "integer",
            "description": "total amount",
            "example": 32000
          }
        }
      },
      "SummaryIncomeResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "User`s id",
            "example": "63f8635ce9466b36765fbf24"
          },
          "type": {
            "type": "string",
            "description": "type of transaction",
            "example": "income"
          },
          "month": {
            "type": "integer",
            "description": "month of summary",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "year of summary",
            "example": 2023
          },
          "totalAmount": {
            "type": "integer",
            "description": "total amount",
            "example": 300000
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}